boundary_function_name:
conditions: totale_e, step_size, plate placement,
stats:
 	detector(percent), right(percent), down(percent),left(percent),up(percent)
 	tof: max,min,mean,mean_overall

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

<tweezer01:
conditions: 500, 1e-11, plates: 3 [(15, 40), (99, 75), 500] [(15, 10), (99, 75), 500] [(15, 10), (15, 40), 200]
stats:
	['466 (93.2%)', '469 (93.8%)', '18 (3.6%)', '10 (2.0%)', '3 (0.6%)']
	5.62,0.1,0.84,0.86 [ms]
comment: Improved Version: Used different lengths and differnet potential, but if potential too strong it pulls electrons back(still 7%).
Not having a verical plate connecting both tips lead to many electrons going up or down>

<tweezer01_neg_plate:
conditions: 500, 1e-11, plates: 4 [(5, 35), (99, 75), 500] [(5, 15), (99, 75), 500] [(1, 55), (80, 99), -200] [(5, 5), (99, 20), -200]
stats:
	['440 (88.0%)', '440 (88.0%)', '44 (8.8%)', '0 (0.0%)', '0 (0.0%)']
	9.73,0.09,0.94,1.27 [ms]
comment: Negativ plates lead to more oscillation>

<tweezer01_pos_plate:
conditions: 500, 1e-10, plates: 3 [(5, 35), (93, 75), 500] [(5, 15), (93, 75), 500] [(99, 70), (99, 80), 800]
stats:
	['428 (85.6%)', '428 (85.6%)', '72 (14.4%)', '0 (0.0%)', '0 (0.0%)']
	20.34,0.09,0.65,0.69 [ms]>


<dome01:
conditions: 500, 1e-11, plates: 6 [(10, 20), (35, 45), 300] [(10, 40), (35, 40), 300] [(70, 50), (70, 65), 500] [(50, 60), (75, 60), 500] [(90, 65), (90, 75), 800] [(85, 70), (95, 70), 600]
stats:
	['366 (73.2%)', '416 (83.2%)', '29 (5.8%)', '0 (0.0%)', '48 (9.6%)']
	8.58,0.13,0.98,1.3 [ms]
comment: a lot of uncontrolled oscillation>



<points02:
conditions: 50, 1e-11, plates: 20 [(0, 25), (1, 26), 200] [(5, 28), (6, 29), 230] [(10, 32), (11, 33), 260] [(15, 34), (16, 35), 290] [(20, 37), (21, 38), 320] [(25, 40), (26, 41), 350] [(30, 42), (31, 43), 380] [(35, 45), (36, 46), 410] [(40, 47), (41, 48), 440] [(45, 50), (46, 51), 470] [(50, 52), (51, 53), 500] [(55, 55), (56, 56), 530] [(60, 57), (61, 58), 560] [(65, 59), (66, 60), 590] [(70, 61), (71, 62), 620] [(75, 64), (76, 65), 650] [(80, 66), (81, 67), 680] [(85, 68), (86, 69), 710] [(90, 70), (91, 71), 740] [(95, 72), (96, 73), 770]
stats:
	['40 (80.0%)', '40 (80.0%)', '8 (16.0%)', '0 (0.0%)', '0 (0.0%)']
	1.61,0.11,0.38,0.79 [ms]>

<points04:
conditions: 500, 1e-11, plates: 30 [(1, 26), (2, 27), 200] [(4, 28), (5, 29), 225] [(7, 30), (8, 31), 250] [(11, 32), (12, 33), 275] [(14, 34), (15, 35), 300] [(17, 36), (18, 37), 325] [(21, 38), (22, 39), 350] [(24, 40), (25, 41), 375] [(27, 41), (28, 42), 400] [(31, 43), (32, 44), 425] [(34, 45), (35, 46), 450] [(37, 46), (38, 47), 475] [(41, 48), (42, 49), 500] [(44, 50), (45, 51), 525] [(47, 51), (48, 52), 550] [(51, 53), (52, 54), 575] [(54, 54), (55, 55), 600] [(57, 56), (58, 57), 625] [(61, 57), (62, 58), 650] [(64, 59), (65, 60), 675] [(67, 60), (68, 61), 700] [(71, 62), (72, 63), 725] [(74, 63), (75, 64), 750] [(77, 65), (78, 66), 775] [(81, 66), (82, 67), 800] [(84, 68), (85, 69), 800] [(87, 69), (88, 70), 800] [(91, 71), (92, 72), 800] [(94, 72), (95, 73), 800] [(98, 74), (99, 75), 800]
stats:
	['500 (100.0%)', '500 (100.0%)', '0 (0.0%)', '0 (0.0%)', '0 (0.0%)']
	1.98,0.1,0.24,0.24 [ms]
comment: Improved version: tried different variants with less or more points, different steps in potential and a max potential.
 Mostly those starting on the upper edge end up looping and hitting the left wall>



<plates01:
conditions: 50, 1e-11, plates: 6 [(1, 26), (14, 34), 250] [(17, 36), (31, 43), 400] [(34, 45), (47, 51), 550] [(51, 53), (64, 59), 700] [(67, 60), (81, 66), 800] [(84, 68), (98, 74), 800]
stats:
	['45 (90.0%)', '46 (92.0%)', '2 (4.0%)', '0 (0.0%)', '0 (0.0%)']
	7.78,0.1,0.68,1.03 [ms]
comment: Inspired by points04 but trying to minimize the amount of plates used.
Looking at the potential density plot we see that the last column has very low potential.
This seems to be crucial for the electrons that dont fully arrive and turn all the way back>

<plates02:
conditions: 500, 1e-11, plates: 11 [(1, 26), (8, 31), 250.0] [(10, 32), (18, 36), 280.0] [(20, 38), (28, 42), 310.0] [(30, 43), (38, 47), 340.0] [(40, 48), (48, 51), 370.0] [(49, 52), (57, 56), 400.0] [(59, 57), (67, 60), 430.0] [(69, 61), (77, 65), 460.0] [(79, 66), (87, 69), 490.0] [(89, 70), (97, 73), 520.0] [(98, 74), (99, 75), 745.0]
stats:
	['463 (92.6%)', '470 (94.0%)', '23 (4.6%)', '0 (0.0%)', '0 (0.0%)']
	6.94,0.11,0.58,0.73 [ms]
comment: Very much successful with just adjusting last plate and creating more of a gradient due to larger steps, Many electrons didnt hit -> potential too small>

<plates03:
conditions: 500, 1e-11, plates: 11 [(1, 26), (8, 31), 250.0] [(10, 32), (18, 36), 305.0] [(20, 38), (28, 42), 360.0] [(30, 43), (38, 47), 415.0] [(40, 48), (48, 51), 470.0] [(49, 52), (57, 56), 525.0] [(59, 57), (67, 60), 580.0] [(69, 61), (77, 65), 635.0] [(79, 66), (87, 69), 690.0] [(89, 70), (97, 73), 745.0] [(98, 74), (99, 75), 745.0]
stats:
	['497 (99.4%)', '498 (99.6%)', '1 (0.2%)', '0 (0.0%)', '0 (0.0%)']
	9.44,0.1,0.31,0.34 [ms]
comment: Stronger and smother gradient gives best results. losing just a few to long oscillations>

<plates04:
conditions: 500, 1e-11, plates: 6 [(83, 67), (99, 74), 850] [(63, 59), (79, 66), 850] [(44, 49), (59, 57), 750.0] [(24, 40), (40, 48), 500.0] [(4, 28), (20, 38), 250.0] [(1, 25), (2, 26), 12.5]
stats:
	['499 (99.8%)', '499 (99.8%)', '0 (0.0%)', '0 (0.0%)', '0 (0.0%)']
	3.17,0.09,0.27,0.29 [ms]
comment: Trying to minimize amount of plates to compensate made much bigger steps in potential. Last plate doesnt always fit so turned around order the plates are placed.
Creates an almost as perfect gradient with 6 plates>

<plates06:
conditions: 500, 1e-11, plates: 4 [(63, 59), (99, 74), 781.8181818181819] [(20, 38), (55, 55), 481.8181818181818] [(1, 25), (12, 33), 131.8181818181818] [(99, 73), (99, 75), 1000]
stats:
	['500 (100.0%)', '500 (100.0%)', '0 (0.0%)', '0 (0.0%)', '0 (0.0%)']
	0.41,0.1,0.13,0.13 [ms]
comment: Find lowest possible amount of plates to still create sufficient gradient
Important to scale the space inbetween the plates according to difference in potential so gradient is smooth>

<plates_simple:
conditions: 5000, 1e-11, plates: 3 [(63, 56), (99, 74), 680] [(20, 35), (55, 52), 480] [(99, 73), (99, 75), 1000]
stats:
	['4985 (99.7%)', '4995 (99.9%)', '2 (0.04%)', '0 (0.0%)', '2 (0.04%)']
	9.87,0.1,0.17,0.18 [ms]
comment: Simple version with almost same performance. One plate less and linear order of plates>

